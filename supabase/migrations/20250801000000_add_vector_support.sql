-- This is a migration file. Its content should be managed by Supabase CLI.
-- It's typically a timestamped file for schema changes.
-- Example content:
-- create extension if not exists vector;
-- alter table public.health_specialists add column embedding vector(1536);
-- alter table public.schools add column embedding vector(1536);
-- alter table public.outdoor_clubs add column embedding vector(1536);
-- create or replace function match_health_specialists (
--   query_embedding vector(1536),
--   match_threshold float,
--   match_count int
-- )
-- returns table (
--   id uuid,
--   name text,
--   specialty text,
--   description text,
--   similarity float
-- )
-- language plpgsql
-- as $$
-- begin
--   return query
--   select
--     health_specialists.id,
--     health_specialists.name,
--     health_specialists.specialty,
--     health_specialists.description,
--     1 - (health_specialists.embedding <=> query_embedding) as similarity
--   from health_specialists
--   where 1 - (health_specialists.embedding <=> query_embedding) > match_threshold
--   order by similarity desc
--   limit match_count;
-- end;
-- $$;
-- create or replace function match_schools (
--   query_embedding vector(1536),
--   match_threshold float,
--   match_count int
-- )
-- returns table (
--   id uuid,
--   name text,
--   type text,
--   description text,
--   similarity float
-- )
-- language plpgsql
-- as $$
-- begin
--   return query
--   select
--     schools.id,
--     schools.name,
--     schools.type,
--     schools.description,
--     1 - (schools.embedding <=> query_embedding) as similarity
--   from schools
--   where 1 - (schools.embedding <=> query_embedding) > match_threshold
--   order by similarity desc
--   limit match_count;
-- end;
-- $$;
-- create or replace function match_outdoor_clubs (
--   query_embedding vector(1536),
--   match_threshold float,
--   match_count int
-- )
-- returns table (
--   id uuid,
--   name text,
--   activity_type text,
--   description text,
--   similarity float
-- )
-- language plpgsql
-- as $$
-- begin
--   return query
--   select
--     outdoor_clubs.id,
--     outdoor_clubs.name,
--     outdoor_clubs.activity_type,
--     outdoor_clubs.description,
--     1 - (outdoor_clubs.embedding <=> query_embedding) as similarity
--   from outdoor_clubs
--   where 1 - (outdoor_clubs.embedding <=> query_embedding) > match_threshold
--   order by similarity desc
--   limit match_count;
-- end;
-- $$;
